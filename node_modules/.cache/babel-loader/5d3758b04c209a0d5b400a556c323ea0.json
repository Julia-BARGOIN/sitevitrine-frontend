{"ast":null,"code":"var _jsxFileName = \"/Users/juliabargoin/Desktop/Simplon/sitevitrine-frontend/src/components/admin/modal/index.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { Modal } from \"react-bootstrap\";\nimport { openModal } from \"./actions/\";\nimport { loged, logout } from \"../../session/actions\";\n\nconst RedirectLogin = isLoged => isLoged ? React.createElement(Redirect, {\n  to: \"/adminhome\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}) : null;\n\nclass ModalAdmin extends Component {\n  constructor() {\n    super();\n    this.onHandleClose = this.onHandleClose.bind(this);\n    this.onHandleShow = this.onHandleShow.bind(this);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n  /**\n   * on handle close\n   */\n\n\n  onHandleClose() {\n    const dispatch = this.props.dispatch;\n    dispatch(openModal(false));\n    return;\n  }\n  /**\n   * on handle show\n   */\n\n\n  onHandleShow() {\n    const dispatch = this.props.dispatch;\n    dispatch(openModal(true));\n    return;\n  }\n\n  render() {\n    const open = this.props.open;\n    return React.createElement(Modal, {\n      show: open,\n      onHide: this.onHandleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Connexion administrateur\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      variant: \"secondary\",\n      onClick: this.onHandleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Close\")));\n  }\n\n}\n\nconst mapToProps = state => {\n  const open = state.modal.open;\n  return {\n    open\n  };\n};\n\nexport default connect(mapToProps)(ModalAdmin);","map":{"version":3,"sources":["/Users/juliabargoin/Desktop/Simplon/sitevitrine-frontend/src/components/admin/modal/index.js"],"names":["React","Component","Redirect","connect","axios","Modal","openModal","loged","logout","RedirectLogin","isLoged","ModalAdmin","constructor","onHandleClose","bind","onHandleShow","state","email","password","dispatch","props","render","open","mapToProps","modal"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,uBAA9B;;AAEA,MAAMC,aAAa,GAAGC,OAAO,IAC3BA,OAAO,GAAG,oBAAC,QAAD;AAAU,EAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAH,GAAkC,IAD3C;;AAGA,MAAMC,UAAN,SAAyBV,SAAzB,CAAmC;AACjCW,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AAEA,SAAKE,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;AAED;;;;;AAGAL,EAAAA,aAAa,GAAG;AAAA,UACNM,QADM,GACO,KAAKC,KADZ,CACND,QADM;AAGdA,IAAAA,QAAQ,CAACb,SAAS,CAAC,KAAD,CAAV,CAAR;AAEA;AACD;AAED;;;;;AAGAS,EAAAA,YAAY,GAAG;AAAA,UACLI,QADK,GACQ,KAAKC,KADb,CACLD,QADK;AAGbA,IAAAA,QAAQ,CAACb,SAAS,CAAC,IAAD,CAAV,CAAR;AAEA;AACD;;AAEDe,EAAAA,MAAM,GAAG;AAAA,UACCC,IADD,GACU,KAAKF,KADf,CACCE,IADD;AAGP,WACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEA,IAAb;AAAmB,MAAA,MAAM,EAAE,KAAKT,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CADF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAE,KAAKA,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CALF,CADF;AAaD;;AAnDgC;;AAsDnC,MAAMU,UAAU,GAAGP,KAAK,IAAI;AAAA,QAClBM,IADkB,GACTN,KAAK,CAACQ,KADG,CAClBF,IADkB;AAG1B,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CAJD;;AAMA,eAAenB,OAAO,CAACoB,UAAD,CAAP,CAAoBZ,UAApB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\n\nimport { Modal } from \"react-bootstrap\";\nimport { openModal } from \"./actions/\";\nimport { loged, logout } from \"../../session/actions\";\n\nconst RedirectLogin = isLoged =>\n  isLoged ? <Redirect to=\"/adminhome\" /> : null;\n\nclass ModalAdmin extends Component {\n  constructor() {\n    super();\n\n    this.onHandleClose = this.onHandleClose.bind(this);\n    this.onHandleShow = this.onHandleShow.bind(this);\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  /**\n   * on handle close\n   */\n  onHandleClose() {\n    const { dispatch } = this.props;\n\n    dispatch(openModal(false));\n\n    return;\n  }\n\n  /**\n   * on handle show\n   */\n  onHandleShow() {\n    const { dispatch } = this.props;\n\n    dispatch(openModal(true));\n\n    return;\n  }\n\n  render() {\n    const { open } = this.props;\n\n    return (\n      <Modal show={open} onHide={this.onHandleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Connexion administrateur</Modal.Title>\n        </Modal.Header>\n        <Modal.Body></Modal.Body>\n        <Modal.Footer>\n          <button variant=\"secondary\" onClick={this.onHandleClose}>\n            Close\n          </button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapToProps = state => {\n  const { open } = state.modal;\n\n  return { open };\n};\n\nexport default connect(mapToProps)(ModalAdmin);\n"]},"metadata":{},"sourceType":"module"}
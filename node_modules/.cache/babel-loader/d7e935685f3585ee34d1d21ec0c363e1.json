{"ast":null,"code":"import { fromJS } from \"immutable\";\nimport actionTypes from \"../actions/action-types\";\nconst initialState = {\n  open: false,\n  form: \"login\",\n  id: \"\"\n};\n\nconst openModal = (state, action) => {\n  const open = action.open,\n        form = action.form,\n        id = action.id;\n  return fromJS(state).setIn([\"open\"], open).setIn([\"form\"], form).setIn([\"id\"], id).toJS();\n};\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return openModal(state, action);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/juliabargoin/Desktop/Simplon/sitevitrine-frontend/src/components/admin/modal/reducers/index.js"],"names":["fromJS","actionTypes","initialState","open","form","id","openModal","state","action","setIn","toJS","type","OPEN_MODAL"],"mappings":"AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,KADa;AAEnBC,EAAAA,IAAI,EAAE,OAFa;AAGnBC,EAAAA,EAAE,EAAE;AAHe,CAArB;;AAMA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAAA,QAC3BL,IAD2B,GACRK,MADQ,CAC3BL,IAD2B;AAAA,QACrBC,IADqB,GACRI,MADQ,CACrBJ,IADqB;AAAA,QACfC,EADe,GACRG,MADQ,CACfH,EADe;AAGnC,SAAOL,MAAM,CAACO,KAAD,CAAN,CACJE,KADI,CACE,CAAC,MAAD,CADF,EACYN,IADZ,EAEJM,KAFI,CAEE,CAAC,MAAD,CAFF,EAEYL,IAFZ,EAGJK,KAHI,CAGE,CAAC,IAAD,CAHF,EAGUJ,EAHV,EAIJK,IAJI,EAAP;AAKD,CARD;;AAUA,gBAAe,CAACH,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKV,WAAW,CAACW,UAAjB;AACE,aAAON,SAAS,CAACC,KAAD,EAAQC,MAAR,CAAhB;;AACF;AACE,aAAOD,KAAP;AAJJ;AAMD,CAPD","sourcesContent":["import { fromJS } from \"immutable\";\nimport actionTypes from \"../actions/action-types\";\n\nconst initialState = {\n  open: false,\n  form: \"login\",\n  id: \"\"\n};\n\nconst openModal = (state, action) => {\n  const { open, form, id } = action;\n\n  return fromJS(state)\n    .setIn([\"open\"], open)\n    .setIn([\"form\"], form)\n    .setIn([\"id\"], id)\n    .toJS();\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return openModal(state, action);\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}